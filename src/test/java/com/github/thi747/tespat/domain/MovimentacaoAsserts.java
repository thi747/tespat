package com.github.thi747.tespat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MovimentacaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMovimentacaoAllPropertiesEquals(Movimentacao expected, Movimentacao actual) {
        assertMovimentacaoAutoGeneratedPropertiesEquals(expected, actual);
        assertMovimentacaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMovimentacaoAllUpdatablePropertiesEquals(Movimentacao expected, Movimentacao actual) {
        assertMovimentacaoUpdatableFieldsEquals(expected, actual);
        assertMovimentacaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMovimentacaoAutoGeneratedPropertiesEquals(Movimentacao expected, Movimentacao actual) {
        assertThat(expected)
            .as("Verify Movimentacao auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMovimentacaoUpdatableFieldsEquals(Movimentacao expected, Movimentacao actual) {
        assertThat(expected)
            .as("Verify Movimentacao relevant properties")
            .satisfies(e -> assertThat(e.getData()).as("check data").isEqualTo(actual.getData()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMovimentacaoUpdatableRelationshipsEquals(Movimentacao expected, Movimentacao actual) {
        assertThat(expected)
            .as("Verify Movimentacao relationships")
            .satisfies(e -> assertThat(e.getBem()).as("check bem").isEqualTo(actual.getBem()))
            .satisfies(e -> assertThat(e.getPessoa()).as("check pessoa").isEqualTo(actual.getPessoa()));
    }
}
